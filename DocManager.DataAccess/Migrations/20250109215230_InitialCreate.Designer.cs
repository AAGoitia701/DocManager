// <auto-generated />
using System;
using DocManager.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DocManager.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250109215230_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DocManager.Model.Models.Medico", b =>
                {
                    b.Property<int>("medico_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("medico_id"));

                    b.Property<string>("medico_contraseña")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("medico_correo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("medico_nombreCompleto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("medico_telefono")
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    b.HasKey("medico_id");

                    b.ToTable("Medico");
                });

            modelBuilder.Entity("DocManager.Model.Models.Paciente", b =>
                {
                    b.Property<int>("paciente_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("paciente_id"));

                    b.Property<int>("medico_id")
                        .HasColumnType("int");

                    b.Property<string>("paciente_DNI")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("paciente_correoElectronico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("paciente_direccion")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("paciente_estadoCivil")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("paciente_fechaNac")
                        .HasColumnType("date");

                    b.Property<string>("paciente_nombreCompleto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("paciente_telefono")
                        .HasColumnType("int");

                    b.HasKey("paciente_id");

                    b.HasIndex("medico_id");

                    b.ToTable("Paciente");
                });

            modelBuilder.Entity("DocManager.Model.Models.Paciente", b =>
                {
                    b.HasOne("DocManager.Model.Models.Medico", "Medico")
                        .WithMany("Pacientes")
                        .HasForeignKey("medico_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medico");
                });

            modelBuilder.Entity("DocManager.Model.Models.Medico", b =>
                {
                    b.Navigation("Pacientes");
                });
#pragma warning restore 612, 618
        }
    }
}
